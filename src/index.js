(function() {(window.nunjucksPrecompiled = window.nunjucksPrecompiled || {})["index.html"] = (function() {
function root(env, context, frame, runtime, cb) {
var lineno = null;
var colno = null;
var output = "";
try {
var parentTemplate = null;
output += "<!DOCTYPE html>\n<html>\n  <head>\n    <meta name=\"viewport\" content=\"user-scalable=no, width=device-width, initial-scale=1, maximum-scale=1\">\n    <link rel=\"stylesheet\" href=\"/dist/index.css\">\n  </head>\n  <body>\n    <header class=\"header--page\">\n        <h1>UrbanSearch</h1>\n        <img class=\"header--page__img\" src=\"/front_end/images/tu-delft.svg\" alt=\"TU Delft logo\">\n    </header>\n    <main>\n        <div id=\"map\"></div>\n    </main>\n    <!-- <section class=\"card card--info\">\n        <div class=\"card--info__content\">\n\n        </div>\n    </section>\n    <section class=\"card card--control\">\n        <header>\n            MAP CONTROLS\n        </header>\n        <nav>\n            <button>Cities</button>\n            <button>Relations</button>\n        </nav>\n        <form class=\"\" action=\"index.html\" method=\"post\">\n            <input type=\"text\" name=\"city-search\" value=\"\" placeholder=\"UrbanSearch\">\n        </form>\n        <div class=\"card--control__cities\" data-city-list>\n\n        </div>\n        <div class=\"card--control__relations\">\n\n        </div>\n    </section> -->\n\n    <script>\n    const MARKERS = {}\n    var MAP;\n    function cities(map) {\n        fetch('/city_latlng.json')\n            .then((response) => {\n                return response.json();\n            })\n            .then((cities) => {\n                const city_list = document.querySelector('[data-city-list]');\n\n                cities.forEach((city) => {\n                    appendCityToList(city_list, city)\n                    MARKERS[city.city_name] = { marker: customMarker(map, city), neighbours: []}\n                    cities.forEach((neighbour) => {\n                        MARKERS[city.city_name].neighbours.push(flightPath)\n                        flightPath.setMap(map)\n\t\t\t\t\t\tconsole.log(flightPath);\n                    })\n                })\n            })\n    }\n\n\n    function appendCityToList(list, city) {\n        let p = document.createElement(\"p\")\n        p.innerText = city.city_name\n        list.appendChild(p);\n\n        p.addEventListener('click', (e) => {\n            if (!MARKERS[city.city_name].marker.getMap(MAP)) {\n                MARKERS[city.city_name].marker.setMap(MAP)\n                MARKERS[city.city_name].neighbours.forEach((neighbour) => {\n                    neighbour.setMap(MAP)\n                })\n            } else {\n                MARKERS[city.city_name].marker.setMap(null)\n                MARKERS[city.city_name].neighbours.forEach((neighbour) => {\n                    neighbour.setMap(null)\n                })\n            }\n\n        })\n    }\n\n    function customMarker(map, city) {\n        const m = new google.maps.Marker({\n          position: {lat: city.lat, lng: city.lng},\n          map: map,\n          zIndex: 999,\n          icon: {\n            path: \"M-20,0a20,20 0 1,0 40,0a20,20 0 1,0 -40,0\",\n            fillColor: '#d81b60',\n            fillOpacity: Math.random(),\n            anchor: new google.maps.Point(0,0),\n            strokeWeight: 1,\n            strokeColor: '#FFFFFF',\n            strokeOpacity: Math.random(),\n            scale: Math.sqrt(scale(city.population))\n          }\n        });\n\n\t\tm.addListener('mouseover', (e) => {\n\t\t\tMARKERS[city.city_name].neighbours.forEach((neighbour) => {\n\t\t\t\tneighbour.setVisible(true)\n\t\t\t})\n\t\t})\n\n\t\tm.addListener('mouseout', (e) => {\n\t\t\tMARKERS[city.city_name].neighbours.forEach((neighbour) => {\n\t\t\t\tneighbour.setVisible(false)\n\t\t\t})\n\t\t})\n\n\t\treturn m\n    }\n\n    function scale(value, options) {\n        RANGE = 850000 - 45000\n        return value/RANGE\n    }\n\n      var map;\n      function initMap() {\n        var icon = {\n          path: \"M-20,0a20,20 0 1,0 40,0a20,20 0 1,0 -40,0\",\n          fillColor: '#d81b60',\n          fillOpacity: .6,\n          anchor: new google.maps.Point(0,0),\n          strokeWeight: 1,\n          strokeColor: '#a00037',\n          strokeOpacity: .6\n        }\n        map = new google.maps.Map(document.getElementById('map'), {\n          zoom: 7,\n          center: {lat: 51.98799603, lng: 5.922999562},\n          styles: styles,\n          mapTypeControl: false,\n          streetViewControl: false,\n          fullscreenControl: false\n        });\n        MAP = map\n        cities(map)\n      }\n    </script>\n    <script async defer\n    src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAvg8p9qiY0WMg_LpHO6-PvZWlDyEbPGOw&callback=initMap\">\n    </script>\n  </body>\n</html>\n";
if(parentTemplate) {
parentTemplate.rootRenderFunc(env, context, frame, runtime, cb);
} else {
cb(null, output);
}
;
} catch (e) {
  cb(runtime.handleError(e, lineno, colno));
}
}
return {
root: root
};

})();
})();
